////////////////////////////////////////////////////////////////////////////////
// Модуль "ккПодготовкаФормСерверСлужебный" содержит процедуры и функции для 
// подговтоки форм для работы с нетиповым фнукционалом системы.
////////////////////////////////////////////////////////////////////////////////

#Область ПрограммныйИнтерфейс

//Новые функции, которые заменят процедуры


// Добавляет многострочное поле реквизита объекта и возвращает элемент формы, добавленный на форму.
//
// Параметры:
//	Форма - УправляемаяФорма - форма для которой выполняется действие.
//	ИмяРеквизита - Строка - Имя создааваемого поля и он же имя реквизита объекта.
//	Родитель - ГруппаФормы; ТаблицаФормы; УправляемаяФорма - Родитель элемента.
//	РасположитьПередЭЛементом - ГруппаФормы; ТаблицаФормы; УправляемаяФорма - Элемент перед которым требуется разместить новый элемент.
//	ПараметрыОтображения - Структура - Структура по которой заполняются звойства команды.
//	Высота - Число - Высота многострочного поля.
//
// Возвращаемое значение:
//	ЭлементФормы - добавленный на форму, новый элемент формы.
//
Функция ДобавитьМногострочноеПолеРеквизитОбъекта(Форма,
												ИмяРеквизита,
												Родитель = Неопределено,
												РасположитьПередЭлементом = Неопределено, 
												ПараметрыОтображения = Неопределено,
												Высота = 2) Экспорт
	
	Если ТипЗнч(ПараметрыОтображения) = Тип("Структура") Тогда
		Если Не ПараметрыОтображения.Свойство("ПутьКДанным") Тогда
			ПараметрыОтображения.Вставить("ПутьКДанным", "Объект."+ИмяРеквизита);
		КонецЕсли;
	Иначе
		ПараметрыОтображения = Новый Структура;
		ПараметрыОтображения.Вставить("ПутьКДанным", "Объект."+ИмяРеквизита);
	КонецЕсли;
	
	ПолеФормы = Форма.Элементы.Добавить(ИмяРеквизита, Тип("ПолеФормы"), Родитель);
	ПолеФормы.Вид = ВидПоляФормы.ПолеВвода;
	
	ЗаполнитьЗначенияСвойств(ПолеФормы, ПараметрыОтображения);
	
	Если РасположитьПередЭлементом <> Неопределено Тогда
		ПереместитьЭлемент(ПолеФормы, РасположитьПередЭлементом, Родитель, Форма);
	КонецЕсли;
	
	ПолеФормы.ПоложениеЗаголовка = ПоложениеЗаголовкаЭлементаФормы.Верх;
	ПолеФормы.РастягиватьПоВертикали = Ложь;
	ПолеФормы.АвтоМаксимальнаяВысота = Ложь;
	ПолеФормы.АвтоМаксимальнаяШирина = Ложь;
	ПолеФормы.МногострочныйРежим = Истина;
	ПолеФормы.Высота = Высота;

	Возврат ПолеФормы;
	
КонецФункции

// Функция добавляет флажок реквизита объекта на форму и возвращает добавленный элемент
//
// Параметры:
//  Форма - УправляемаяФорма - форма для которой выполняется действие.
//	ИмяРеквизита - Строка - Имя создааваемого поля и он же имя реквизита объекта.
//	Родитель - Произвольный - Ссылка на родителя.
//	ПараметрыОтображения - Структура - Структура по которой заполняются звойства команды.
//	РасположитьПередЭЛементом - ГруппаФормы; ТаблицаФормы; УправляемаяФорма - Элемент перед которым требуется разместить новый элемент.
//
//Пример:
//	ккПодготовкаФормСервер.ДобавитьПолеФлажкаНаФормуРеквизитОбъекта(ЭтаФорма, "ЭтоДоговор", Элементы.ГруппаШапкаПраво);
//
Функция ДобавитьПолеФлажкаНаФормуРеквизитОбъекта(Форма,
											ИмяРеквизита, 
											Родитель = Неопределено,
											ПараметрыОтображения = Неопределено,
											РасположитьПередЭлементом = Неопределено) Экспорт
	
	Если ТипЗнч(ПараметрыОтображения) = Тип("Структура") Тогда
		Если Не ПараметрыОтображения.Свойство("ПутьКДанным") Тогда
			ПараметрыОтображения.Вставить("ПутьКДанным", "Объект."+ИмяРеквизита);
		КонецЕсли;
	Иначе
		ПараметрыОтображения = Новый Структура;
		ПараметрыОтображения.Вставить("ПутьКДанным", "Объект."+ИмяРеквизита);
	КонецЕсли;
	
	ПолеФормы = Форма.Элементы.Добавить(ИмяРеквизита, Тип("ПолеФормы"), Родитель);
	ПолеФормы.Вид = ВидПоляФормы.ПолеФлажка;
	
	ЗаполнитьЗначенияСвойств(ПолеФормы, ПараметрыОтображения);
	
	Если РасположитьПередЭлементом <> Неопределено Тогда
		ПереместитьЭлемент(ПолеФормы, РасположитьПередЭлементом, Родитель, Форма);
	КонецЕсли;

	ПараметрыОтображения.Удалить("ПутьКДанным");
	
	Возврат ПолеФормы;
	
КонецФункции


// Функция добавляет поле реквизита объекта на форму и возвращает добавленный элемент
//
// Параметры:
//  Форма - УправляемаяФорма - форма для которой выполняется действие.
//	ИмяРеквизита - Строка - Имя создааваемого поля и он же имя реквизита объекта.
//	Родитель - Произвольный - Ссылка на родителя.
//	ЭтоПолеВвода - Булево - Определяет возможность ввода в добавляемое поле
//	ПараметрыОтображения - Структура - Структура по которой заполняются звойства команды.
//
//Пример:
//	ккПодготовкаФормСервер.ДобавитьПолеНаФормуРеквизитОбъекта(ЭтаФорма, "ккВидДоговора", Элементы.ГруппаШапкаПраво, Истина);
//
Функция ДобавитьПолеНаФормуРеквизитОбъекта(Форма,
											ИмяРеквизита, 
											Родитель = Неопределено,
											ЭтоПолеВвода = Ложь,
											ПараметрыОтображения = Неопределено,
											РасположитьПередЭлементом = Неопределено) Экспорт
	
	Если ТипЗнч(ПараметрыОтображения) = Тип("Структура") Тогда
		Если Не ПараметрыОтображения.Свойство("ПутьКДанным") Тогда
			ПараметрыОтображения.Вставить("ПутьКДанным", "Объект."+ИмяРеквизита);
		КонецЕсли;
	Иначе
		ПараметрыОтображения = Новый Структура;
		ПараметрыОтображения.Вставить("ПутьКДанным", "Объект."+ИмяРеквизита);
	КонецЕсли;
	
	ПолеФормы = Форма.Элементы.Добавить(ИмяРеквизита, Тип("ПолеФормы"), Родитель);
	Если ЭтоПолеВвода = Истина Тогда
		ПолеФормы.Вид = ВидПоляФормы.ПолеВвода;
	КонецЕсли;
	
	ЗаполнитьЗначенияСвойств(ПолеФормы, ПараметрыОтображения);
	
	Если РасположитьПередЭлементом <> Неопределено Тогда
		ПереместитьЭлемент(ПолеФормы, РасположитьПередЭлементом, Родитель, Форма);
	КонецЕсли;

	ПараметрыОтображения.Удалить("ПутьКДанным");
	
	Возврат ПолеФормы;
	
КонецФункции

// Добавляет группу кнопок на форму.
//
// Параметры:
//	Форма - УправляемаяФорма - форма для которой выполняется действие.
//	Родитель - ГруппаФормы; ТаблицаФормы; УправляемаяФорма - Родитель элемента.
//	РасположитьПередЭлементом - ГруппаФормы; ТаблицаФормы; УправляемаяФорма - Элемент перед которым требуется разместить новый элемент.
//
// Возвращаемое значение:
//	ЭлементФормы - добавленная на форму, группа кнопок формы.
//
Функция ДобавитьГруппуКнопок(Форма,
							Родитель = Неопределено,
							РасположитьПередЭлементом = Неопределено) Экспорт 
	Сч = 0;
	ЭлементНайден = Истина;
	Пока ЭлементНайден = Истина Цикл
		
		Шаблон = НСтр("ru = 'ГруппаКнопокФормы%1'");
		ИмяРеквизита = СтрШаблон(Шаблон, Сч);
		
		Если Форма.Элементы.Найти(ИмяРеквизита) = Неопределено Тогда
			
			ЭлементНайден = Ложь;
			ГруппаКонпокФормы = Форма.Элементы.Добавить(ИмяРеквизита, Тип("ГруппаФормы"), Родитель);
			ГруппаКонпокФормы.Вид = ВидГруппыФормы.ГруппаКнопок;
			
			ПереместитьЭлемент(ГруппаКонпокФормы, РасположитьПередЭлементом, Родитель, Форма);
			
			Возврат ГруппаКонпокФормы;
		КонецЕсли;
		Сч = Сч + 1;
	КонецЦикла;
	
КонецФункции

Процедура ПереместитьЭлемент(ПолеФормы, РасположитьПередЭЛементом, Родитель, Форма)

	Если РасположитьПередЭЛементом <> Неопределено Тогда
		Форма.Элементы.Переместить(ПолеФормы, Родитель, РасположитьПередЭЛементом);
	КонецЕсли;

КонецПроцедуры

//Старые процедуры, которые будут заменены функциями

// Проверяет выполнялась ли уже подготовка формы для работы с нетиповым функционалом системы.
//
// Параметры:
// Форма - УправляемаяФорма
//
Функция ФормаПодготовлена(Форма) Экспорт
	
	Если Форма.Элементы.Найти("ккФормаПодготовлена") = Неопределено Тогда
		ФормаПодготовлена = Форма.Элементы.Добавить("ккФормаПодготовлена", Тип("ДекорацияФормы"));
		ФормаПодготовлена.Видимость = Ложь;
		ФормаПодготовлена.Доступность = Ложь;
	Иначе
		Возврат Истина;
	КонецЕсли;
	
	Возврат Ложь;
	
КонецФункции

// Процедура добавляет команду и гиперссылку на форму
//
// Параметры:
//  Форма - УправляемаяФорма - форма для которой выполняется действие.
//	ИмяКоманды - Строка - Имя создааваемой команды.
//	ПроцедураОбработки - Строка - Имя процедуры обработки.
//	ЗаголовокГиперссылки - Строка - Заголовок команды.
//	ГруппаВывода - Произвольный - Ссылка на родителя.
//
Процедура ДобавтьКомандуИГиперссылкуНаФорму(Форма, ИмяКоманды, ПроцедураОбработки, ЗаголовокГиперссылки, ГруппаВывода) Экспорт
	
	ДобавитьКомандуНаФорму(Форма,
						ИмяКоманды,
						ПроцедураОбработки,
						ЗаголовокГиперссылки);
	
	ДобавитьКнопкуНаФорму(Форма,
						ИмяКоманды,
						ВидКнопкиФормы.КнопкаКоманднойПанели,
						ИмяКоманды,
						Новый Структура("Вид", ВидКнопкиФормы.Гиперссылка), 
						ГруппаВывода);
	
КонецПроцедуры

// Процедура добавляет поле реквизита объекта на форму с заданным значением МаксимальнаяШирина = 28
//	для вывода в шапку формы, согласно рекомендации адаптации интерфейсов
//
// Параметры:
//  Форма - УправляемаяФорма - форма для которой выполняется действие.
//	ИмяРеквизита - Строка - Имя создааваемого поля и он же имя реквизита объекта.
//	Родитель - Произвольный - Ссылка на родителя.
//	ЭтоПолеВвода - Булево - Определяет возможность ввода в добавляемое поле
//	ПараметрыОтображения - Структура - Структура по которой заполняются звойства команды.
//
//Пример:
//	ккПодготовкаФормСервер.ДобавитьПолеВШапкуФормыРеквизитОбъекта(	ЭтаФорма, 
//																	"ккВидДоговора", 
//																	Элементы.ГруппаШапкаПраво, 
//																	Истина);
//
Процедура ДобавитьПолеВШапкуФормыРеквизитОбъекта(Форма, ИмяРеквизита, Родитель = Неопределено, ЭтоПолеВвода = Ложь, ПараметрыОтображения = Неопределено) Экспорт
	
	Если ТипЗнч(ПараметрыОтображения) = Тип("Структура") Тогда
		Если Не ПараметрыОтображения.Свойство("АвтоМаксимальнаяШирина") Тогда
			ПараметрыОтображения.Вставить("АвтоМаксимальнаяШирина", Ложь);
			ПараметрыОтображения.Вставить("МаксимальнаяШирина", 28);
		КонецЕсли;
	Иначе
		ПараметрыОтображения = Новый Структура;
		ПараметрыОтображения.Вставить("МаксимальнаяШирина", 28);
		ПараметрыОтображения.Вставить("АвтоМаксимальнаяШирина", Ложь);
	КонецЕсли;
	
	ДобавитьПолеНаФормуРеквизитОбъекта(Форма, ИмяРеквизита, Родитель, ЭтоПолеВвода, ПараметрыОтображения);
	
КонецПроцедуры

// Процедура добавляет таблицу на форму
//
// Параметры:
//  Форма - УправляемаяФорма - форма для которой выполняется действие.
//	ИмяПоля - Строка - Имя создааваемой таблицы.
//	ПутьКДанным - Строка - Имя создааваемого поля.
//	СтруктураКолонок - Структура - структура, по данным которой будут созданы колонки 
//		у которых значение элемента структуры будет соответствовать реквизиту таблицы, 
//		а ключ будет именем добавляемого поля.
//	Родитель - Произвольный - Ссылка на родителя.
//	ПараметрыОтображения - Структура - Структура по которой заполняются звойства команды.
//
//Пример:
//
//	СтруктураКолонок = Новый Структура;
//	СтруктураКолонок.Вставить("МенеджерыМенеджер", "Менеджер");
//	СтруктураКолонок.Вставить("МенеджерыНаправлениеДеятельности", "НаправлениеДеятельности");
//	ккПодготовкаФормСервер.ДобавитьТаблицуНаФорму(ЭтаФорма, "ТаблицаМенеджеры", "Объект.ккМенеджеры", СтруктураКолонок, Элементы.ГруппаРодительБизнесРегион);
//
Процедура ДобавитьТаблицуНаФорму(Форма, ИмяПоля, ПутьКДанным, СтруктураКолонок = Неопределено, Родитель = Неопределено, ПараметрыОтображения = Неопределено) Экспорт
	
	ПолеФормы = Форма.Элементы.Добавить(ИмяПоля, Тип("ТаблицаФормы"), Родитель);
	
	Если ПараметрыОтображения <> Неопределено Тогда
		ЗаполнитьЗначенияСвойств(ПолеФормы, ПараметрыОтображения);
	КонецЕсли;
	
	ПолеФормы.ПутьКДанным = ПутьКДанным;
	
	Если СтруктураКолонок <> Неопределено Тогда
		
		Для каждого Элемент Из СтруктураКолонок Цикл
			Параметры = Новый Структура;
			Параметры.Вставить("ПутьКДанным", ПутьКДанным+"."+Элемент.Значение);
			ДобавитьПолеНаФорму(Форма, Элемент.Ключ, Параметры, ПолеФормы, Истина);
	
		КонецЦикла;
		
	КонецЕсли;
	
КонецПроцедуры

// Процедура добавляет команду на форму
//
// Параметры:
//  Форма - УправляемаяФорма - форма для которой выполняется действие.
//	ИмяКоманды - Строка - Имя создааваемой команды.
//	ИмяДействия - Строка - Действие команды.
//	Заголовок - Строка - Заголовок команды.
//	Подсказка - Строка - Подсказка команды.
//
Процедура ДобавитьКомандуНаФорму(Форма, ИмяКоманды, ИмяДействия, Заголовок, Подсказка = "") Экспорт
	
	Команда = Форма.Команды.Добавить(ИмяКоманды);
	Команда.Действие = ИмяДействия;
	Команда.Заголовок = Заголовок;
	Команда.Подсказка = Подсказка;
	
КонецПроцедуры

// Процедура добавляет команду на форму
//
// Параметры:
//  Форма - УправляемаяФорма - форма для которой выполняется действие.
//	ИмяКнопки - Строка - Имя создааваемой кнопки.
//	ВидКнопки - ВидКнопкиФормы - Вид кнопки.
//	ИмяКоманды - Строка - Имя команды.
//	ПараметрыОтображения - Структура - Структура по которой заполняются звойства команды.
//	Родитель - Произвольный - Ссылка на родителя.
//
Процедура ДобавитьКнопкуНаФорму(Форма, ИмяКнопки, ВидКнопки, ИмяКоманды, ПараметрыОтображения = Неопределено, Родитель = Неопределено) Экспорт
	 
	Кнопка = Форма.Элементы.Добавить(ИмяКнопки, Тип("КнопкаФормы"), Родитель);
	Кнопка.Вид = ВидКнопки;
	Кнопка.ИмяКоманды = ИмяКоманды;
	
	Если ПараметрыОтображения <> Неопределено Тогда
		ЗаполнитьЗначенияСвойств(Кнопка, ПараметрыОтображения);
	КонецЕсли;
	
КонецПроцедуры 

// Процедура добавляет поле на форму
//
// Параметры:
//  Форма - УправляемаяФорма - форма для которой выполняется действие.
//	ИмяПоля - Строка - Имя создааваемого поля.
//	ПараметрыОтображения - Структура - Структура по которой заполняются звойства команды.
//	Родитель - Произвольный - Ссылка на родителя.
//	ЭтоПолеВвода - Булево - Определяет возможность ввода в добавляемое поле
//
//Пример:
//
// Добавление элеента табличной части
//	ПараметрыОтображения = Новый Структура;
//	ПараметрыОтображения.Вставить("ПутьКДанным", "Объект.РасшифровкаПлатежа.ккОснованиеПлатежа");
//	ПараметрыОтображения.Вставить("Вид", ВидПоляФормы.ПолеВвода);
//	ккПодготовкаФормСервер.ДобавитьПолеНаФорму(ЭтаФорма, "ккРасшифровкаПлатежаОснованиеПлатежа", ПараметрыОтображения, Элементы.РасшифровкаПлатежа);
//
// Добавление элмента на форму
//	ПараметрыОтображения.Вставить("ПутьКДанным", "ВидДоговора");
//	ккПодготовкаФормСервер.ДобавитьПолеНаФорму(ЭтаФорма, "ВидДоговора", ПараметрыОтображения, Элементы.БыстрыеОтборы, Истина);
//
Процедура ДобавитьПолеНаФорму(Форма, ИмяПоля, ПараметрыОтображения, Родитель = Неопределено, ЭтоПолеВвода = Ложь) Экспорт
	
	ПолеФормы = Форма.Элементы.Добавить(ИмяПоля, Тип("ПолеФормы"), Родитель);
	Если ЭтоПолеВвода = Истина Тогда
		ПолеФормы.Вид = ВидПоляФормы.ПолеВвода;
	КонецЕсли;
	
	ЗаполнитьЗначенияСвойств(ПолеФормы,ПараметрыОтображения);
	
КонецПроцедуры

// Процедура добавляет поле на форму для реквизита формы
//
// Параметры:
//	Форма - УправляемаяФорма - форма для которой выполняется действие.
//	ИмяРеквизита - Строка - Имя реквизита формы.
//	Родитель - Произвольный - Ссылка на родителя.
//	ЭтоПолеВвода - Булево - Определяет возможность ввода в добавляемое поле
//	ПараметрыОтображения - Структура - Структура по которой заполняются звойства команды.
//
//Пример:
//
//	ккПодготовкаФормСервер.ДобавитьПолеНаФормуРеквизитФормы(ЭтаФорма, "ккПравилаОплаты", Элементы.ГруппаСлева, Истина);
//
Процедура ДобавитьПолеНаФормуРеквизитФормы(Форма, ИмяРеквизита, Родитель = Неопределено, ЭтоПолеВвода = Ложь, ПараметрыОтображения = Неопределено) Экспорт
	
	Если ТипЗнч(ПараметрыОтображения) = Тип("Структура") Тогда
		Если Не ПараметрыОтображения.Свойство("ПутьКДанным") Тогда
			ПараметрыОтображения.Вставить("ПутьКДанным", ИмяРеквизита);
		КонецЕсли;
	Иначе
		ПараметрыОтображения = Новый Структура;
		ПараметрыОтображения.Вставить("ПутьКДанным", ИмяРеквизита);
	КонецЕсли;
	
	ПолеФормы = Форма.Элементы.Добавить(ИмяРеквизита, Тип("ПолеФормы"), Родитель);
	Если ЭтоПолеВвода = Истина Тогда
		ПолеФормы.Вид = ВидПоляФормы.ПолеВвода;
	КонецЕсли;
	
	ЗаполнитьЗначенияСвойств(ПолеФормы, ПараметрыОтображения);
	
	ПараметрыОтображения.Удалить("ПутьКДанным");
	
КонецПроцедуры

// Процедура добавляет поле таблицы на форму
//
// Параметры:
//  Форма - УправляемаяФорма - форма для которой выполняется действие.
//	ПутьТабличнойЧасти - Строка - Путь к табличной части, колонку которая выводится.
//	ИмяКолонкиТабличнойЧасти - Строка - Имя колонки, которая выводится.
//	Родитель - Произвольный - Ссылка на родителя.
//	ПараметрыОтображения - Структура - Структура по которой заполняются звойства поля.
//	ЭтоПолеВвода - Булево - Определяет возможность ввода в добавляемое поле
// 
//Пример:
//
// ккПодготовкаФормСервер.ДобавитьПолеТабличнойЧастиНаформу(ЭтаФорма, "Объект.Товары", "ккДатаОтгрузки", Элементы.Товары);
//
Процедура ДобавитьПолеТабличнойЧастиНаформу(Форма, ПутьТабличнойЧасти, ИмяКолонкиТабличнойЧасти, Родитель = Неопределено, Знач ПараметрыОтображения = Неопределено,  ЭтоПолеВвода = Истина) Экспорт
	
	ПутьКДанным = СокрЛП(ПутьТабличнойЧасти)+"."+СокрЛП(ИмяКолонкиТабличнойЧасти);
	
	МассивПутьКТабличнойЧасти = СтроковыеФункцииКлиентСервер.РазложитьСтрокуВМассивПодстрок(ПутьТабличнойЧасти, ".", Истина);
	ПоследнееСлово = МассивПутьКТабличнойЧасти[МассивПутьКТабличнойЧасти.Количество()-1];
	ИмяПоляТабличнойЧасти = СокрЛП(ПоследнееСлово)+СокрЛП(ИмяКолонкиТабличнойЧасти);
	
	Если ТипЗнч(ПараметрыОтображения) = Тип("Структура") Тогда
		Если Не ПараметрыОтображения.Свойство("ПутьКДанным") Тогда
			ПараметрыОтображения.Вставить("ПутьКДанным", ПутьКДанным);
		КонецЕсли;
	Иначе
		ПараметрыОтображения = Новый Структура;
		ПараметрыОтображения.Вставить("ПутьКДанным", ПутьКДанным);
	КонецЕсли;
	
	ДобавитьПолеНаФорму(Форма, ИмяПоляТабличнойЧасти, ПараметрыОтображения, Родитель, ЭтоПолеВвода);

КонецПроцедуры

#КонецОбласти

#Область ОграничениеДоступаКФормам

//+ Корус Консалтинг. Весна К.Н. 14.02.2019. 
//Настройка прав  
Процедура ОграничитьЦеновыеРеквизитыДокументовПродаж(Форма) Экспорт
	
	Если НЕ РольДоступна("ккИзменениеЦенВДокументахПродажи")
		ИЛИ РольДоступна("ПолныеПрава") Тогда
	    Возврат;
	КонецЕсли; 
		
	МассивОграничиваемыхРеквизитов = Новый Массив;
	МассивОграничиваемыхРеквизитов.Добавить("ВидЦены");
	МассивОграничиваемыхРеквизитов.Добавить("Цена");
	МассивОграничиваемыхРеквизитов.Добавить("Сумма");
	МассивОграничиваемыхРеквизитов.Добавить("СтавкаНДС");
	МассивОграничиваемыхРеквизитов.Добавить("СуммаНДС");
	МассивОграничиваемыхРеквизитов.Добавить("СуммаСНДС");
	МассивОграничиваемыхРеквизитов.Добавить("ПроцентРучнойСкидки");
	МассивОграничиваемыхРеквизитов.Добавить("СуммаРучнойСкидки");
	МассивОграничиваемыхРеквизитов.Добавить("ПроцентАвтоматическойСкидки");
	МассивОграничиваемыхРеквизитов.Добавить("СуммаАвтоматическойСкидки");
	
	МассивОграничиваемыхРеквизитовШапки = Новый Массив;
	МассивОграничиваемыхРеквизитовШапки.Добавить("Статус");
	МассивОграничиваемыхРеквизитовШапки.Добавить("ДатаСогласования");
	МассивОграничиваемыхРеквизитовШапки.Добавить("Организация"); 
	МассивОграничиваемыхРеквизитовШапки.Добавить("Партнер");
	МассивОграничиваемыхРеквизитовШапки.Добавить("ПартнерБезКЛ");
	МассивОграничиваемыхРеквизитовШапки.Добавить("Контрагент");
	МассивОграничиваемыхРеквизитовШапки.Добавить("Договор");
	МассивОграничиваемыхРеквизитовШапки.Добавить("Дата");
	МассивОграничиваемыхРеквизитовШапки.Добавить("НадписьЭтапыОплаты");
	
	МассивОграничиваемыхЭлементов = Новый Массив;
	МассивОграничиваемыхЭлементов.Добавить("ГруппаЦеныСкидки");

	ЭлементыФормы = Форма.Элементы;
	Если ЭлементыФормы.Найти("Товары") <> Неопределено Тогда
		
		Для Каждого ОграничиваемыйРеквизит Из МассивОграничиваемыхРеквизитов Цикл
			Элемент = ЭлементыФормы.Найти("Товары" + ОграничиваемыйРеквизит);
			Если Элемент <> Неопределено Тогда
				Элемент.ТолькоПросмотр = Истина;
			КонецЕсли; 
		КонецЦикла; 
		
	КонецЕсли; 
	
	Если ЭлементыФормы.Найти("Услуги") <> Неопределено Тогда
		
		Для Каждого ОграничиваемыйРеквизит Из МассивОграничиваемыхРеквизитов Цикл
			Элемент = ЭлементыФормы.Найти("Услуги" + ОграничиваемыйРеквизит);
			Если Элемент <> Неопределено Тогда
				Элемент.ТолькоПросмотр = Истина;
			КонецЕсли; 
		КонецЦикла; 
		
	КонецЕсли; 
	
	Для Каждого ОграничиваемыйЭлемент Из МассивОграничиваемыхЭлементов Цикл
		Элемент = ЭлементыФормы.Найти(ОграничиваемыйЭлемент);
	    Если Элемент <> Неопределено Тогда
			 Элемент.Доступность = Ложь;
			 Элемент.Видимость = Ложь;
		КонецЕсли; 
	КонецЦикла;
	
	Для Каждого ОграничиваемыйЭлемент Из МассивОграничиваемыхРеквизитовШапки Цикл
		Элемент = ЭлементыФормы.Найти(ОграничиваемыйЭлемент);
	    Если Элемент <> Неопределено Тогда
			 Элемент.ТолькоПросмотр = Истина;
		КонецЕсли; 
		Если ТипЗнч(Элемент) = Тип("ПолеФормы")
			И Элемент.Вид = ВидПоляФормы.ПолеНадписи Тогда
		    Элемент.Доступность = Ложь;
		КонецЕсли; 	
	КонецЦикла; 

КонецПроцедуры //- Корус Консалтинг. Весна К.Н. 14.02.2019 
	
#КонецОбласти 